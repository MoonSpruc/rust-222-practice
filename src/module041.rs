// Перше завдання
#[test]
fn test1() {
    let x: i32 = 5;
    let mut y: u32 = 5;

    y = x as u32;

    let z = 10; // Type of z ?

    println!("Success!");
}

// ---------------------------------------------

// Друге завдання
#[test]
fn test2() {
    let v: u16 = 38_u8 as u16;

    println!("Success!");
}

// ---------------------------------------------

// Третє завдання
#[test]
fn test3() {
        let x = 5;
        assert_eq!("i32".to_string(), type_of(&x));

        println!("Success!");
}
fn type_of<T>(_: &T) -> String {
    format!("{}", std::any::type_name::<T>())
}

// ---------------------------------------------

// Четверте завдання
#[test]
fn test4() {
    assert_eq!(i8::MAX, 127);
    assert_eq!(u8::MAX, 255);

    println!("Success!");
}

// ---------------------------------------------

// П'яте завдання
#[test]
fn test5() {
    let v1 = 247_u8 + 8;
    let v2 = i8::checked_add(119, 8).unwrap();
    println!("{},{}",v1,v2);
}

// ---------------------------------------------

// Шосте завдання
// fn test6() {}


// ---------------------------------------------

// Сьоме завдання
// fn test7() {}


// ---------------------------------------------

// Восьме завдання
// fn test8() {}


// ---------------------------------------------
// Дев'яте завдання
// fn test9() {}
